name: Docker Image and PyPI Publish CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t abraao1231/tonicnet .
          docker tag abraao1231/tonicnet:latest abraao1231/tonicnet:${{ github.sha }}
          docker push abraao1231/tonicnet:latest

  publish_pypi:
    runs-on: ubuntu-latest
    env:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          
      
      - name: Update version
        run: cd tonicnet && poetry version patch

      - name: Install project dependencies
        run: pip install poetry
        
      - name: Check existing version on PyPI
        id: check_version
        run: |
          PACKAGE_NAME="nome-do-seu-pacote"
          PACKAGE_VERSION=$(poetry version --short)
          RESPONSE_CODE=$(curl --write-out "%{http_code}" --silent --output /dev/null "https://pypi.org/pypi/$PACKAGE_NAME/$PACKAGE_VERSION/json")
          echo "::set-output name=version_exists::$(if [ $RESPONSE_CODE -eq 200 ]; then echo 'true'; else echo 'false'; fi)"
      - name: Publish package to PyPI
        run: |
            VERSION_EXISTS=$(echo "${{ steps.check_version.outputs.version_exists }}" | tr '[:upper:]' '[:lower:]')
            if [ "$VERSION_EXISTS" = "false" ]; then
                cd tonicnet 
                poetry build 
                poetry publish --username Abraao1231 --password ${{ secrets.POETRY_PASSWORD }}
            else
              echo "Version already exists on PyPI. Skipping upload."
            fi


       
