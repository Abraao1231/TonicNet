name: Docker Image and PyPI Publish CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Build the Docker image
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t abraao1231/tonicnet .
          docker tag abraao1231/tonicnet:latest abraao1231/tonicnet:${{ github.sha }}
          docker push abraao1231/tonicnet:latest

  publish_pypi:
    runs-on: ubuntu-latest
    env:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install project dependencies 
        run: |
          pip install poetry

      - name: Check for changes
        id: check_changes
        run: |
          CHANGES=$(git diff --name-only ${{ steps.prev_commit.outputs.commit }} HEAD)
          echo "::set-output name=changes::${CHANGES}"

      - name: Update version
        id: update_version
        run: |
          cd tonicnet 
          CHANGES="${{ steps.check_changes.outputs.changes }}"
          if [ -n "$CHANGES" ]; then
            poetry version patch  # Atualize a versão conforme necessário
          fi
          
      - name: Publish to PyPI
        run: |
          if [ -n "${{ steps.check_changes.outputs.changes }}" ]; then
            cd tonicnet
            poetry build
            poetry publish --username Abraao1231 --password ${{ secrets.POETRY_PASSWORD }}
          else
            echo "No changes. Skipping publishing."
          fi
